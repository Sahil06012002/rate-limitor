openapi: 3.0.0
info:
  title: Rate Limiting Proxy API
  version: 1.0.0
  description: A proxy API service that handles rate limiting for third-party APIs

servers:
  - url: http://localhost:3000/api
    description: Local development server

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key

  schemas:
    Error:
      type: object
      properties:
        error:
          type: string
    
    RegisterAppRequest:
      type: object
      required:
        - name
        - baseUrl
        - rateLimit
        - timeWindow
      properties:
        name:
          type: string
          description: Name of the application
        baseUrl:
          type: string
          format: uri
          description: Base URL of the target API
        rateLimit:
          type: integer
          minimum: 1
          description: Number of requests allowed in the time window
        timeWindow:
          type: integer
          minimum: 1
          description: Time window in seconds
    
    App:
      type: object
      properties:
        id:
          type: string
          format: uuid
        user_id:
          type: string
          format: uuid
        name:
          type: string
        base_url:
          type: string
        rate_limit:
          type: integer
        time_window:
          type: integer
        created_at:
          type: string
          format: date-time

    RegisterResponse:
      type: object
      properties:
        message:
          type: string
        api_key:
          type: string

    AppsResponse:
      type: object
      properties:
        apps:
          type: array
          items:
            $ref: '#/components/schemas/App'

    RateLimitExceededError:
      type: object
      properties:
        error:
          type: string
        queuePosition:
          type: integer
        retryAfter:
          type: integer

paths:
  /auth/register:
    post:
      summary: Register a new user
      description: Creates a new user account and returns an API key
      tags:
        - Authentication
      responses:
        '201':
          description: Registration successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /apps/register:
    post:
      summary: Register a new application
      description: Register a new third-party API for proxying
      security:
        - ApiKeyAuth: []
      tags:
        - Applications
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterAppRequest'
      responses:
        '201':
          description: Application registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  app:
                    $ref: '#/components/schemas/App'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /apps:
    get:
      summary: List registered applications
      description: Get all applications registered by the authenticated user
      security:
        - ApiKeyAuth: []
      tags:
        - Applications
      responses:
        '200':
          description: List of applications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /apis/{appId}/{path}:
    parameters:
      - name: appId
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: ID of the registered application
      - name: path
        in: path
        required: true
        schema:
          type: string
        description: Path to forward to the target API
    get:
      summary: Proxy GET request
      security:
        - ApiKeyAuth: []
      tags:
        - Proxy
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Application not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededError'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Proxy POST request
      security:
        - ApiKeyAuth: []
      tags:
        - Proxy
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Application not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededError'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Proxy PUT request
      security:
        - ApiKeyAuth: []
      tags:
        - Proxy
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Application not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededError'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Proxy DELETE request
      security:
        - ApiKeyAuth: []
      tags:
        - Proxy
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Application not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitExceededError'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'